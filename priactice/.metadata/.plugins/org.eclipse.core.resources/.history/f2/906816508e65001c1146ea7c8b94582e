package miu;

public class AbernathyNumber {

	public static void main(String[] args) {
		AbernathyNumber a = new AbernathyNumber();
		System.out.println(a.isAbernathyV2(24));
	}

	int isAbernathy(int n) {
		int counter = 0;
		for (int i = 2; i < n - 1; i++) {
			if (isPrime(i)) {
				for(int j= i;j< n; j++) {
					if(isPrime(j)) {
						if(i+j==n) {
							counter++;
							if (counter > 1) {
								return 1;
							} 
						}
					}	
				}
			}
			
		}

		return 0;

	}
	
	int isAbernathyV2(int n) {
		int counter = 0;
		int firstUsedNum=0;
		int secondUsedNum=0;
		for (int i = 2; i < n - 1; i++) {
			if (isPrime(i) && isPrime(n-i)) {
				if(i != firstUsedNum && (n-i) != secondUsedNum) {
					counter++;
					firstUsedNum = n-i;
					secondUsedNum = i;
				}
				
			
				if(counter>1) {
					return 1;
				}
			}
			
		}

		return 0;

	}

	boolean isPrime(int n) {
		for (int i = 2; i < n; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
}
